<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up / Sign In</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles for the Inter font and main background */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8; /* Light gray-blue background */
        }
        /* Custom focus state to match the clean design */
        input:focus, select:focus {
            border-color: #3b82f6 !important; /* Blue-500 */
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
            outline: none;
        }
    </style>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary-blue': '#3b82f6',
                        'secondary-gray': '#6b7280',
                    }
                }
            }
        }
    </script>
</head>
<body class="flex items-center justify-center min-h-screen p-4">

    <div id="app-container" class="w-full max-w-md">

        <!-- SIGN UP FORM (Admin/Company Signup Page) -->
        <div id="signup-form" class="bg-white p-8 rounded-xl shadow-2xl transition-opacity duration-500">
            <h1 class="text-3xl font-bold text-center text-gray-800 mb-2">Admin (Company) Sign Up</h1>
            <p class="text-sm text-center text-gray-500 mb-8">1 admin user per company</p>

            <form onsubmit="handleSignup(event)">
                
                <!-- Name Input -->
                <div class="mb-4">
                    <label for="signup-name" class="block text-sm font-medium text-gray-700">Name</label>
                    <input type="text" id="signup-name" name="name" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                </div>

                <!-- Email Input -->
                <div class="mb-4">
                    <label for="signup-email" class="block text-sm font-medium text-gray-700">Email</label>
                    <input type="email" id="signup-email" name="email" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                </div>

                <!-- Password Input -->
                <div class="mb-4">
                    <label for="signup-password" class="block text-sm font-medium text-gray-700">Password</label>
                    <input type="password" id="signup-password" name="password" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                </div>

                <!-- Confirm Password Input -->
                <div class="mb-4">
                    <label for="signup-confirm-password" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                    <input type="password" id="signup-confirm-password" name="confirmPassword" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                </div>
                
                <!-- Designation Dropdown (Added as requested) -->
                <div class="mb-4">
                    <label for="signup-designation" class="block text-sm font-medium text-gray-700">Designation</label>
                    <select id="signup-designation" name="designation" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg appearance-none bg-white focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                        <option value="" disabled selected>Select your designation</option>
                        <option value="admin">Admin</option>
                        <option value="manager">Manager</option>
                        <option value="employee">Employee</option>
                    </select>
                </div>

                <!-- Country Selection Dropdown (Mocked) -->
                <div class="mb-6">
                    <label for="signup-country" class="block text-sm font-medium text-gray-700">Country Selection</label>
                    <select id="signup-country" name="country" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg appearance-none bg-white focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                        <option value="" disabled selected>Select a Country</option>
                        <!-- In a real app, this list would be populated dynamically from an API or large data source -->
                        <option value="US">United States</option>
                        <option value="CA">Canada</option>
                        <option value="IN">India</option>
                        <option value="GB">United Kingdom</option>
                        <option value="AU">Australia</option>
                    </select>
                    <p class="text-xs text-gray-500 mt-1">The selected country's currency is set as the company's base currency.</p>
                </div>

                <!-- Signup Button -->
                <button type="submit" class="w-full bg-primary-blue text-white font-semibold py-3 rounded-lg hover:bg-blue-600 transition duration-300 shadow-md hover:shadow-lg">
                    Sign Up
                </button>
            </form>

            <!-- Switch to Sign In -->
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-600">
                    Already have an account? 
                    <button onclick="showSignin()" class="text-primary-blue hover:text-blue-700 font-medium transition duration-150">
                        Sign In
                    </button>
                </p>
            </div>
        </div>
        
        <!-- SIGN IN FORM (Initially Hidden) -->
        <div id="signin-form" class="bg-white p-8 rounded-xl shadow-2xl transition-opacity duration-500 hidden opacity-0">
            <h1 class="text-3xl font-bold text-center text-gray-800 mb-8">Sign In Page</h1>

            <form onsubmit="handleSignin(event)">

                <!-- Email Input -->
                <div class="mb-4">
                    <label for="signin-email" class="block text-sm font-medium text-gray-700">Email</label>
                    <input type="email" id="signin-email" name="email" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                </div>

                <!-- Password Input -->
                <div class="mb-4">
                    <label for="signin-password" class="block text-sm font-medium text-gray-700">Password</label>
                    <input type="password" id="signin-password" name="password" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                </div>

                <!-- Designation Dropdown (Added as requested) -->
                <div class="mb-6">
                    <label for="signin-designation" class="block text-sm font-medium text-gray-700">Designation</label>
                    <select id="signin-designation" name="designation" required class="mt-1 w-full p-3 border border-gray-300 rounded-lg appearance-none bg-white focus:ring-primary-blue focus:border-primary-blue transition duration-150">
                        <option value="" disabled selected>Select your designation</option>
                        <option value="admin">Admin</option>
                        <option value="manager">Manager</option>
                        <option value="employee">Employee</option>
                    </select>
                </div>

                <!-- Login Button -->
                <button type="submit" class="w-full bg-green-500 text-white font-semibold py-3 rounded-lg hover:bg-green-600 transition duration-300 shadow-md hover:shadow-lg">
                    Login
                </button>
            </form>

            <!-- Links -->
            <div class="mt-6 text-center">
                <p class="text-sm mb-2">
                    Don't have an account? 
                    <button onclick="showSignup()" class="text-primary-blue hover:text-blue-700 font-medium transition duration-150">
                        Sign Up
                    </button>
                </p>
                <button onclick="showCustomMessage('Forgot Password functionality would route to a recovery page.')" class="text-sm text-secondary-gray hover:text-gray-900 transition duration-150">
                    Forgot password?
                </button>
            </div>
        </div>
        
        <!-- Custom Message Modal (Replaces alert()) -->
        <div id="message-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div class="bg-white p-6 rounded-xl shadow-2xl max-w-sm w-full">
                <h3 id="modal-title" class="text-xl font-bold mb-3 text-gray-800">Status</h3>
                <p id="modal-text" class="text-gray-700 mb-4"></p>
                <button onclick="hideCustomMessage()" class="w-full bg-primary-blue text-white font-semibold py-2 rounded-lg hover:bg-blue-600 transition duration-300">
                    Close
                </button>
            </div>
        </div>

    </div>

    <script>
        // --- View Switching Logic ---
        const signupForm = document.getElementById('signup-form');
        const signinForm = document.getElementById('signin-form');
        
        /** Shows the Sign In form and hides the Sign Up form with transitions. */
        function showSignin() {
            signupForm.classList.add('opacity-0');
            setTimeout(() => {
                signupForm.classList.add('hidden');
                signinForm.classList.remove('hidden');
                setTimeout(() => signinForm.classList.remove('opacity-0'), 10);
            }, 300); // Wait for fade-out
        }

        /** Shows the Sign Up form and hides the Sign In form with transitions. */
        function showSignup() {
            signinForm.classList.add('opacity-0');
            setTimeout(() => {
                signinForm.classList.add('hidden');
                signupForm.classList.remove('hidden');
                setTimeout(() => signupForm.classList.remove('opacity-0'), 10);
            }, 300); // Wait for fade-out
        }

        // --- Custom Message Modal Logic (Replaces alert) ---
        const modal = document.getElementById('message-modal');
        const modalText = document.getElementById('modal-text');

        /** Displays a custom modal message to the user. */
        function showCustomMessage(message, title = 'Status') {
            document.getElementById('modal-title').textContent = title;
            modalText.textContent = message;
            modal.classList.remove('hidden');
        }

        /** Hides the custom modal message. */
        function hideCustomMessage() {
            modal.classList.add('hidden');
        }

        // --- Form Submission Handlers (Mock Logic) ---

        /** Handles the submission of the Sign Up form. */
        function handleSignup(event) {
            event.preventDefault();
            
            // In a real application, you would perform data validation and API calls here.
            const name = document.getElementById('signup-name').value;
            const email = document.getElementById('signup-email').value;
            const password = document.getElementById('signup-password').value;
            const confirmPassword = document.getElementById('signup-confirm-password').value;
            const designation = document.getElementById('signup-designation').value;
            const country = document.getElementById('signup-country').value;

            if (password !== confirmPassword) {
                showCustomMessage('Error: Passwords do not match.', 'Validation Error');
                return;
            }

            // Simulate successful registration
            const message = `Sign Up successful for Admin: ${name} (${email}). 
                            Designation: ${designation}. 
                            Country Base Currency set (via ${country}). 
                            Now routing to Sign In...`;
            showCustomMessage(message, 'Success!');

            // Clear form fields
            event.target.reset();

            // Automatically switch to Sign In after a delay
            setTimeout(showSignin, 2000);
        }

        /** Handles the submission of the Sign In form. */
        function handleSignin(event) {
            event.preventDefault();
            
            // In a real application, you would send credentials to an authentication service here.
            const email = document.getElementById('signin-email').value;
            const designation = document.getElementById('signin-designation').value;
            
            // Simulate successful login
            const message = `Login successful for ${designation}: ${email}. Welcome to the dashboard!`;
            showCustomMessage(message, 'Welcome Back');
            
            // Clear form fields
            event.target.reset();
        }
    </script>
</body>
</html>
